@model ListModel<Game>

@{
    var request = ViewContext.HttpContext.Request;
    var returnUrl = request.Path + request.QueryString.ToUriComponent();
}
<div class="col-2 border-2">
    <ul class="nav ">
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false">@ViewData["currentCategory"]</a>
        <ul class="dropdown-menu">
            <li>
                <a class="dropdown-item" asp-controller="Game" asp-route-category=@null>Все</a>
            </li>
            @foreach (var item in ViewBag.Categories) {
                <li>
                    <a class="dropdown-item" asp-controller="Game" asp-route-category="@item.NormalizedName">@item.Name</a>
                </li>
            }
        </ul>
        </li>
    </ul>
</div>
<!-- выбор категории -->
<br />
<div class="row row-cols-1 row-cols-md-3 g-4">
    @foreach (var game in Model.Items)
    {
        <div class="col">
            <div class="card">
                <img class="card-img-top" style="height: 250px" src="@game.ImagePath" />
                <div class="card-body">
                     <h5 class="card-title">@game.Name</h5
                    <p class="card-text">@game.Description</p>
                    <p class="card-text">@game.Price $</p>
                    <a href="@Url.Action("Add", "Cart", new { id = game.Id, returnUrl = returnUrl })" class="btn btn-primary">Add to cart</a>
                </div>
            </div>
        </div>
     }
</div>

@{
    string? category = request.Query["category"].ToString();
    category = (string?)ViewData["currentCategoryShortName"];
    int cur = Model.CurrentPage;
    int prev = Model.CurrentPage == 1 ? 1 : Model.CurrentPage - 1;
    int next = Model.CurrentPage == Model.TotalPages ? Model.TotalPages : Model.CurrentPage + 1;
    int one = cur - 1, two = cur, three = cur + 1;
    if (prev == cur)
    {
        one = 1;
        two = 2;
        three = 3;
    }
    if (next == cur)
    {
        three = cur;
        two = cur - 1;
        one = cur - 2;
    }
}
<nav aria-label="Page navigation example">
  <ul class="pagination">
    <li class="page-item"><a class="page-link" asp-controller="Game" asp-route-category="@category" asp-route-pageNo="@prev">Previous</a></li>
        @if (one > 0)
        {
            <li class="page-item @(cur == one ? "active" : "")"><a class="page-link " asp-controller="Game" asp-route-category="@category" asp-route-pageNo="@one">@one</a></li>
        }
        @if (two > 0 && two <= Model.TotalPages)
        {
            <li class="page-item @(cur == two ? "active" : "")"><a class="page-link" asp-controller="Game" asp-route-category="@category" asp-route-pageNo="@two">@two</a></li>
        }
        @if (three <= Model.TotalPages) 
        {
            <li class="page-item @(cur == three ? "active" : "")"><a class="page-link" asp-controller="Game" asp-route-category="@category" asp-route-pageNo="@three">@three</a></li>
        }
    <li class="page-item"><a class="page-link" asp-controller="Game" asp-route-category="@category" asp-route-pageNo="@next">Next</a></li>
  </ul>
</nav>